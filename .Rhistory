runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
vals_plati$plati_prelucrate
DT::datatable(rownames = FALSE,
data = vals_plati$plati_prelucrate, options = list(dom = "Btp", pageLength = vals_plati$page_length),extensions = "Buttons",
caption = htmltools::tags$caption(style = 'caption-side: top; text-align: left;',vals_plati$caption)) %>%
DT::formatRound(columns = vals_plati$round_col,digits = 0)
vals_plati$round_col
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
str(vals_plati$plati_prelucrate)
vals_plati$snapshots
runApp()
runApp()
runApp()
vals_plati$plati_prelucrate %>% dplyr::filter(Anul == lubridate::year(Sys.Date())) %>%
nrow()
min(5,vals_plati$plati_prelucrate %>% dplyr::filter(Anul == lubridate::year(Sys.Date())) %>%
nrow())
runApp()
runApp()
bi_finantatori <- readxl::read_excel("bi_finantatori.xlsx", sheet = "final")
str(bi_finantatori)
bi_finantatori %>% dplyr::mutate(dplyr::across(.cols = dplyr::contains("Data"), as.Date(.x))) %>% str()
library(tidyverse)
bi_finantatori %>% dplyr::mutate(dplyr::across(.cols = dplyr::contains("Data"), as.Date(.x))) %>% str()
bi_finantatori %>% dplyr::mutate(dplyr::across(.cols = dplyr::contains("Data"), ~as.Date(.x))) %>% str()
bi_finantatori <- readxl::read_excel("bi_finantatori.xlsx", sheet = "final") %>%
dplyr::mutate(dplyr::across(.cols = dplyr::contains("Data"), ~as.Date(.x)))
str(bi_finantatori)
shiny::runApp()
lista_banci <- readRDS("R/reactivedata/banci/lista_banci.rds") %>% dplyr::pull(BANCA_CHARISMA)
mapare_rating <- readRDS("R/reactivedata/banci/mapare_rating.rds")
baza_date_rating <- readRDS("R/reactivedata/banci/baza_date_rating.rds")
str(baza_date_rating)
unique(baza_date_rating$Banca)
unique(baza_date_rating$Banca) %in% unique(bi_finantatori$CodFinantator)
which(unique(baza_date_rating$Banca) %in% unique(bi_finantatori$CodFinantator)==FALSE)
unique(baza_date_rating$Banca)[which(unique(baza_date_rating$Banca) %in% unique(bi_finantatori$CodFinantator)==FALSE)]
unique(bi_finantatori$CodFinantator)
bi_finantatori <- readxl::read_excel("bi_finantatori.xlsx", sheet = "final") %>%
bi_finantatori <- readxl::read_excel("bi_finantatori.xlsx", sheet = "final") %>%
dplyr::mutate(dplyr::across(.cols = dplyr::contains("Data"), ~ as.Date(.x))) %>%
dplyr::mutate(CodFinantator = ifelse(  CodFinantator == 'BRD - GSG',  "BRD-GSG",
ifelse(  CodFinantator == "Exim",    "EXIM",
ifelse(   CodFinantator == "CREDIT AGRICOLE",     "EMPORIKI",
ifelse(   CodFinantator == "BRCI",  "BRCI (fosta ATE )",
ifelse(  CodFinantator == "IDEA BANK",  "RIB",
ifelse( CodFinantator == "FIRST BANK",    "PIRAEUS",
ifelse(CodFinantator == "VISTA", "MARFIN", CodFinantator) ) ) ) ) ) ) )
unique(baza_date_rating$Banca)[which(unique(baza_date_rating$Banca) %in% unique(bi_finantatori$CodFinantator)==FALSE)]
bi_finantatori <- readxl::read_excel("bi_finantatori.xlsx", sheet = "final") %>%
dplyr::mutate(dplyr::across(.cols = dplyr::contains("Data"), ~ as.Date(.x)))
baza_date_rating <- readRDS("R/reactivedata/banci/baza_date_rating.rds")
unique(baza_date_rating$Banca)
baza_date_rating %>% dplyr::mutate(Banca = ifelse(  CodFinantator == "BRD-GSG",'BRD - GSG',
ifelse(  CodFinantator == "EXIM", "Exim",
ifelse(   CodFinantator == "EMPORIKI", "CREDIT AGRICOLE",
ifelse(   CodFinantator == "BRCI (fosta ATE )", "BRCI",
ifelse(  CodFinantator == "RIB", "IDEA BANK",
ifelse( CodFinantator == "PIRAEUS","FIRST BANK",
ifelse(CodFinantator == "MARFIN","VISTA",  CodFinantator) ) ) ) ) ) ) )
baza_date_rating %>% dplyr::mutate(Banca = ifelse(  Banca == "BRD-GSG",'BRD - GSG',
ifelse(  Banca == "EXIM", "Exim",
ifelse(   Banca == "EMPORIKI", "CREDIT AGRICOLE",
ifelse(   Banca == "BRCI (fosta ATE )", "BRCI",
ifelse(  Banca == "RIB", "IDEA BANK",
ifelse( Banca == "PIRAEUS","FIRST BANK",
ifelse(Banca == "MARFIN","VISTA",  Banca) ) ) ) ) ) ) )
bi_finantatori <- readxl::read_excel("bi_finantatori.xlsx", sheet = "final") %>%
dplyr::mutate(dplyr::across(.cols = dplyr::contains("Data"), ~ as.Date(.x)))
baza_date_rating <- readRDS("R/reactivedata/banci/baza_date_rating.rds") %>%
dplyr::mutate(Banca = ifelse( Banca == "BRD-GSG",  'BRD - GSG',
ifelse( Banca == "EXIM","Exim",
ifelse( Banca == "EMPORIKI","CREDIT AGRICOLE",
ifelse(  Banca == "BRCI (fosta ATE )",  "BRCI",
ifelse(  Banca == "RIB",  "IDEA BANK",
ifelse(Banca == "PIRAEUS", "FIRST BANK",
ifelse(Banca == "MARFIN","VISTA",  Banca) ) ) ) ) ) ) )
unique(baza_date_rating$Banca)[which(unique(baza_date_rating$Banca) %in% unique(bi_finantatori$CodFinantator)==FALSE)]
View(baza_date_rating)
bi_finantatori <- readxl::read_excel("bi_finantatori.xlsx", sheet = "final") %>%
dplyr::mutate(dplyr::across(.cols = dplyr::contains("Data"), ~ as.Date(.x)))
baza_date_rating <- readRDS("R/reactivedata/banci/baza_date_rating.rds") %>%
dplyr::mutate(Banca = ifelse( Banca == "BRD-GSG",  'BRD - GSG',
ifelse( Banca == "EXIM","Exim",
ifelse( Banca == "EMPORIKI","CREDIT AGRICOLE",
ifelse(  Banca == "BRCI (fosta ATE )",  "BRCI",
ifelse(  Banca == "RIB",  "IDEA BANK",
ifelse(Banca == "PIRAEUS", "FIRST BANK",
ifelse(Banca == "MARFIN","VISTA",  Banca) ) ) ) ) ) ) )
names(bi_finantatori)
baza_date_rating %>% dplyr::left_join(y = bi_finantatori %>% dplyr::filter(DataInitiala == as.Date("2021-08-06"),
by = c("Banca" = "CodFinantator"))) %>% View()
baza_date_rating %>% dplyr::left_join(y = bi_finantatori %>% dplyr::filter(DataInitiala = as.Date("2021-08-06"),
by = c("Banca" = "CodFinantator"))) %>% View()
baza_date_rating %>% dplyr::left_join(y = bi_finantatori %>% dplyr::filter(DataInitiala == as.Date("2021-08-06")),
by = c("Banca" = "CodFinantator"))) %>% View()
baza_date_rating %>% dplyr::left_join(y = bi_finantatori %>% dplyr::filter(DataInitiala == as.Date("2021-08-06")),
by = c("Banca" = "CodFinantator")) %>% View()
baza_date_rating %>% dplyr::left_join(y = bi_finantatori %>% dplyr::filter(DataInitiala == as.Date("2021-08-06")),
by = c("Banca" = "CodFinantator")) %>% readr::write_csv(x = .,file = "rating.csv")
runApp()
runApp()
runApp()
runApp()
View(mapare_rating)
runApp()
bi_finantatori <- readxl::read_excel("bi_finantatori.xlsx", sheet = "final") %>%
dplyr::mutate(dplyr::across(.cols = dplyr::contains("Data"), ~ as.Date(.x)))
baza_date_rating <- readRDS("R/reactivedata/banci/baza_date_rating.rds") %>%
dplyr::mutate(Banca = ifelse( Banca == "BRD-GSG",  'BRD - GSG',
ifelse( Banca == "EXIM","Exim",
ifelse( Banca == "EMPORIKI","CREDIT AGRICOLE",
ifelse(  Banca == "BRCI (fosta ATE )",  "BRCI",
ifelse(  Banca == "RIB",  "IDEA BANK",
ifelse(Banca == "PIRAEUS", "FIRST BANK",
ifelse(Banca == "MARFIN","VISTA",  Banca) ) ) ) ) ) ) )
bi_finantatori <- readxl::read_excel("bi_finantatori.xlsx", sheet = "final") %>%
dplyr::mutate(dplyr::across(.cols = dplyr::contains("Data"), ~ as.Date(.x)))
baza_date_rating <- readRDS("R/reactivedata/banci/baza_date_rating.rds") %>%
dplyr::mutate(Banca = ifelse( Banca == "BRD-GSG",  'BRD - GSG',
ifelse( Banca == "EXIM","Exim",
ifelse( Banca == "EMPORIKI","CREDIT AGRICOLE",
ifelse(  Banca == "BRCI (fosta ATE )",  "BRCI",
ifelse(  Banca == "RIB",  "IDEA BANK",
ifelse(Banca == "PIRAEUS", "FIRST BANK",
ifelse(Banca == "MARFIN","VISTA",  Banca) ) ) ) ) ) ) ) %>%
dplyr::left_join(y = bi_finantatori %>% dplyr::filter(DataInitiala == as.Date("2021-08-06")),
by = c("Banca" = "CodFinantator"))
View(baza_date_rating)
View(bi_finantatori)
bi_finantatori <- readxl::read_excel("bi_finantatori.xlsx", sheet = "final") %>%
dplyr::mutate(dplyr::across(.cols = dplyr::contains("Data"), ~ as.Date(.x)))
saveRDS(object = bi_finantatori,file = "R/reactivedata/banci/sinteza_limite.rds")
golem::add_module(name = "rating_database")
runApp()
runApp()
runApp()
runApp()
runApp()
vals$view_baza_solduri
runApp()
runApp()
vals$report_date
runApp()
runApp()
runApp()
runApp()
runApp()
balanta_database <- readRDS("R/reactivedata/balanta_database.rds")
View(balanta_database)
coresp_banci_curente <- readRDS("R/reactivedata/coresp_banci_curente.rds")
coresp_banci_depozite <- readRDS("R/reactivedata/coresp_banci_depozite.rds")
View(coresp_banci_curente)
shiny::runApp()
shiny::runApp()
runApp()
str(grupuri_reactive$grupuri_selectate)
readRDS("R/reactivedata/grupuri/baza_grupuri.rds") %>% str()
grupuri_reactive$grupuri_selectate$Expunere_garantare %>% sum(na.rm = T)
baza_grupuri <- readRDS("R/reactivedata/grupuri/baza_grupuri.rds")
baza_grupuri %>% dplyr::group_by(data_grupuri) %>%
dplyr::summarise(Nr_grupuri = dplyr::n_distinct(GrupId),
Expunere_garantare_totala = sum(Expunere_garantare, na.rm = TRUE)) %>%
dplyr::mutate(Expunere_garantare_surse_proprii =
sum(baza_grupuri$Expunere_garantare[
baza_grupuri$tipologie_conventie=="surse_proprii" & baza_grupuri$data_grupuri==data_grupuri],na.rm = T))
baza_grupuri %>% dplyr::group_by(data_grupuri) %>%
dplyr::summarise(Nr_grupuri = dplyr::n_distinct(GrupId),
Expunere_garantare_totala = sum(Expunere_garantare, na.rm = TRUE))
baza_grupuri %>% dplyr::group_by(data_grupuri) %>%
dplyr::summarise(Nr_grupuri = dplyr::n_distinct(GrupId),
Expunere_garantare_totala = sum(Expunere_garantare, na.rm = TRUE)) %>%
dplyr::mutate(Expunere_garantare_surse_proprii =
sum(baza_grupuri$Expunere_garantare[
baza_grupuri$tipologie_conventie=="surse_proprii" & baza_grupuri$data_grupuri==data_grupuri],na.rm = T))
baza_grupuri %>% dplyr::group_by(data_grupuri) %>%
dplyr::summarise(Nr_grupuri = dplyr::n_distinct(GrupId),
Expunere_garantare_totala = sum(Expunere_garantare, na.rm = TRUE)) %>%
dplyr::left_join(y = baza_grupuri %>% dplyr::filter(tiplogie_conventie=="surse_proprii") %>% dplyr::group_by(data_grupuri) %>%
dplyr::summarise(Expunere_garantare_surse_proprii=sum(Expunere_garantare, na.rm = TRUE)), by = "data_grupuri")
baza_grupuri %>% dplyr::group_by(data_grupuri) %>%
dplyr::summarise(Nr_grupuri = dplyr::n_distinct(GrupId),
Expunere_garantare_totala = sum(Expunere_garantare, na.rm = TRUE)) %>%
dplyr::left_join(y = baza_grupuri %>% dplyr::filter(tipologie_conventie=="surse_proprii") %>% dplyr::group_by(data_grupuri) %>%
dplyr::summarise(Expunere_garantare_surse_proprii=sum(Expunere_garantare, na.rm = TRUE)), by = "data_grupuri")
baza_grupuri %>% dplyr::group_by(data_grupuri) %>%
dplyr::summarise(Nr_grupuri = dplyr::n_distinct(GrupId),
Expunere_garantare_totala = sum(Expunere_garantare, na.rm = TRUE)) %>%
dplyr::left_join(y = baza_grupuri %>% dplyr::filter(tipologie_conventie=="surse_proprii") %>% dplyr::group_by(data_grupuri) %>%
dplyr::summarise(Expunere_garantare_surse_proprii=sum(Expunere_garantare, na.rm = TRUE)), by = "data_grupuri") %>%
dplyr::left_join(y = baza_grupuri %>% dplyr::filter(!is.na(Expunere_garantare), Expunere_garantare>0) %>% dplyr::group_by(data_grupuri) %>%
dplyr::summarise(Nr_grupuri_expunere_garantare =  dplyr::n_distinct(GrupId)), by = "data_grupuri")
baza_grupuri %>% dplyr::group_by(data_grupuri) %>%
dplyr::summarise(Nr_grupuri = dplyr::n_distinct(GrupId),
Expunere_garantare_totala = sum(Expunere_garantare, na.rm = TRUE)) %>%
dplyr::left_join(y = baza_grupuri %>% dplyr::filter(tipologie_conventie=="surse_proprii") %>% dplyr::group_by(data_grupuri) %>%
dplyr::summarise(Expunere_garantare_surse_proprii=sum(Expunere_garantare, na.rm = TRUE)), by = "data_grupuri") %>%
dplyr::left_join(y = baza_grupuri %>% dplyr::filter(Expunere_garantare>0) %>% dplyr::group_by(data_grupuri) %>%
dplyr::summarise(Nr_grupuri_expunere_garantare =  dplyr::n_distinct(GrupId)), by = "data_grupuri")
runApp()
coresp_banci_curente <- readRDS("R/reactivedata/coresp_banci_curente.rds")
coresp_banci_depozite <- readRDS("R/reactivedata/coresp_banci_depozite.rds")
rhandsontable:::editAddin()
rhandsontable:::editAddin()
rhandsontable:::editAddin()
readr::write_csv(x = coresp_banci_curente,file = 'coresp_banci_curente.csv')
readr::write_csv(x = coresp_banci_depozite, file = 'coresp_banci_depozite.csv')
shiny::runApp('C:/Marius Tita/OLD/marius/backup 27.11.2007/my doc/Directia administr. riscuri/Analize Risc/Web Plafon R/Risk applications/LitiigiiDatabase')
shiny::runApp()
shiny::runApp()
sinteza_limite <- readRDS("C:/Marius Tita/OLD/marius/backup 27.11.2007/my doc/Directia administr. riscuri/Analize Risc/Web Plafon R/Risk applications/RiskReport/R/reactivedata/banci/sinteza_limite.rds")
View(sinteza_limite)
runApp()
baza_plati <- readRDS("R/reactivedata/plati/bi_plati.rds")
unique(baza_plati$Banca)
runApp()
baza_plati <- readRDS("R/reactivedata/plati/bi_plati.rds") %>%
dplyr::filter(data_plata <= vals$report_date & data_plata >  vals_anexe$begining_year) %>%
#dplyr::mutate(Banca = ifelse(Banca=="BANCPOST","TRANSILVANIA", ifelse(Banca=="LEUMI","PIRAEUS",
#  ifelse(Banca == "CARPATICA","FEROVIARA",Banca)))) %>%
dplyr::group_by(Banca) %>% dplyr::summarise(Plati = sum(Plata))
report_date <- as.Date("2021-09-30")
baza_plati <- readRDS("R/reactivedata/plati/bi_plati.rds") %>%
dplyr::filter(data_plata <= report_date & data_plata >  vals_anexe$begining_year) %>%
#dplyr::mutate(Banca = ifelse(Banca=="BANCPOST","TRANSILVANIA", ifelse(Banca=="LEUMI","PIRAEUS",
#  ifelse(Banca == "CARPATICA","FEROVIARA",Banca)))) %>%
dplyr::group_by(Banca) %>% dplyr::summarise(Plati = sum(Plata))
begining_year <- as.Date("2020-12-31")
baza_plati <- readRDS("R/reactivedata/plati/bi_plati.rds") %>%
dplyr::filter(data_plata <= report_date & data_plata >  begining_year) %>%
#dplyr::mutate(Banca = ifelse(Banca=="BANCPOST","TRANSILVANIA", ifelse(Banca=="LEUMI","PIRAEUS",
#  ifelse(Banca == "CARPATICA","FEROVIARA",Banca)))) %>%
dplyr::group_by(Banca) %>% dplyr::summarise(Plati = sum(Plata))
clase_risc <- readRDS("R/reactivedata/banci/sinteza_limite.rds") %>%
dplyr::filter(DataInitiala <= report_date &   DataExpirare >= report_date  )
solduri_begining_year <- readRDS("R/reactivedata/baza_banci.rds") %>%
dplyr::filter(data_raport==begining_year, Tip_surse == "Surse_proprii") %>%
#dplyr::mutate(Banca = ifelse(Banca=="BANCPOST","TRANSILVANIA",
#  ifelse(Banca=="LEUMI","PIRAEUS", Banca))) %>%   dplyr::group_by(Banca) %>%
dplyr::summarise(Sold_Garantii=sum(`Soldul garantiei [in LEI]`))
rata_anualizata_plati <- sum(baza_plati$Plati)/sum(solduri_begining_year$Sold_Garantii) * 12/
lubridate::month(report_date)
View(solduri_begining_year)
str(solduri_begining_year)
solduri_begining_year <- readRDS("R/reactivedata/baza_banci.rds") %>%
dplyr::filter(data_raport==begining_year, Tip_surse == "Surse_proprii") %>%
#dplyr::mutate(Banca = ifelse(Banca=="BANCPOST","TRANSILVANIA",
#  ifelse(Banca=="LEUMI","PIRAEUS", Banca))) %>%
dplyr::group_by(Banca) %>%
dplyr::summarise(Sold_Garantii=sum(`Soldul garantiei [in LEI]`))
View(solduri_begining_year)
rata_anualizata_plati <- sum(baza_plati$Plati)/sum(solduri_begining_year$Sold_Garantii) * 12/
lubridate::month(report_date)
View(baza_plati)
str(rata_anualizata_plati)
solduri_begining_year %>% dplyr::group_by(Banca) %>%
dplyr::summarise(Sold_Garantii = sum(Sold_Garantii)) %>%
dplyr::left_join(baza_plati, by = "Banca") %>% dplyr::mutate(Plati = ifelse(is.na(Plati), 0, Plati)) %>%
janitor::adorn_totals(where = "row",  fill = "-",   na.rm = T)
View(baza_plati)
solduri_begining_year %>% dplyr::group_by(Banca) %>%
dplyr::summarise(Sold_Garantii = sum(Sold_Garantii)) %>%
dplyr::left_join(baza_plati, by = "Banca") %>% dplyr::mutate(Plati = ifelse(is.na(Plati), 0, Plati)) %>%
janitor::adorn_totals(where = "row",  fill = "-",   na.rm = T) %>%
dplyr::mutate(Rata_Plati = Plati / Sold_Garantii * 12 / lubridate::month(report_date))
solduri_begining_year %>% dplyr::group_by(Banca) %>%
dplyr::summarise(Sold_Garantii = sum(Sold_Garantii)) %>%
dplyr::left_join(baza_plati, by = "Banca") %>% dplyr::mutate(Plati = ifelse(is.na(Plati), 0, Plati)) %>%
janitor::adorn_totals(where = "row",  fill = "-",   na.rm = T) %>%
dplyr::mutate(Rata_Plati = Plati / Sold_Garantii * 12 / lubridate::month(report_date)) %>%
dplyr::mutate(rank_order = ifelse(Banca == "Total", 0, 1))
solduri_begining_year %>% dplyr::group_by(Banca) %>%
dplyr::summarise(Sold_Garantii = sum(Sold_Garantii)) %>%
dplyr::left_join(baza_plati, by = "Banca") %>% dplyr::mutate(Plati = ifelse(is.na(Plati), 0, Plati)) %>%
janitor::adorn_totals(where = "row",  fill = "-",   na.rm = T) %>%
dplyr::mutate(Rata_Plati = Plati / Sold_Garantii * 12 / lubridate::month(report_date)) %>%
dplyr::mutate(rank_order = ifelse(Banca == "Total", 0, 1)) %>%
dplyr::arrange(rank_order, desc(Rata_Plati)) %>% dplyr::select(-rank_order)
solduri_begining_year %>% dplyr::group_by(Banca) %>%
dplyr::summarise(Sold_Garantii = sum(Sold_Garantii)) %>%
dplyr::left_join(baza_plati, by = "Banca") %>% dplyr::mutate(Plati = ifelse(is.na(Plati), 0, Plati)) %>%
janitor::adorn_totals(where = "row",  fill = "-",   na.rm = T) %>%
dplyr::mutate(Rata_Plati = Plati / Sold_Garantii * 12 / lubridate::month(report_date)) %>%
dplyr::mutate(rank_order = ifelse(Banca == "Total", 0, 1)) %>%
dplyr::arrange(rank_order, desc(Rata_Plati)) %>% dplyr::select(-rank_order) %>%
# I do not collect now Plafon Procentual & Plafon Trezorerie as it will be needed after adjusting Clasa_Risc
dplyr::left_join(y = clase_risc %>% dplyr::select(1,3),
by = c("Banca" = "CodFinantator") )
solduri_begining_year %>% dplyr::group_by(Banca) %>%
dplyr::summarise(Sold_Garantii = sum(Sold_Garantii)) %>%
dplyr::left_join(baza_plati, by = "Banca") %>% dplyr::mutate(Plati = ifelse(is.na(Plati), 0, Plati)) %>%
janitor::adorn_totals(where = "row",  fill = "-",   na.rm = T) %>%
dplyr::mutate(Rata_Plati = Plati / Sold_Garantii * 12 / lubridate::month(report_date)) %>%
dplyr::mutate(rank_order = ifelse(Banca == "Total", 0, 1)) %>%
dplyr::arrange(rank_order, desc(Rata_Plati)) %>% dplyr::select(-rank_order) %>%
# I do not collect now Plafon Procentual & Plafon Trezorerie as it will be needed after adjusting Clasa_Risc
dplyr::left_join(y = clase_risc %>% dplyr::select(1,3), by = c("Banca" = "CodFinantator") ) %>%
dplyr::mutate(ajustare_clasa = ifelse(
Rata_Plati <=   rata_anualizata_plati + 0.04,0, ifelse(
Rata_Plati <=   rata_anualizata_plati + 0.08,
1, ifelse(Rata_Plati <=   rata_anualizata_plati + 0.1, 2, 3) )   ))
solduri_begining_year %>% dplyr::group_by(Banca) %>%
dplyr::summarise(Sold_Garantii = sum(Sold_Garantii)) %>%
dplyr::left_join(baza_plati, by = "Banca") %>% dplyr::mutate(Plati = ifelse(is.na(Plati), 0, Plati)) %>%
janitor::adorn_totals(where = "row",  fill = "-",   na.rm = T) %>%
dplyr::mutate(Rata_Plati = Plati / Sold_Garantii * 12 / lubridate::month(report_date)) %>%
dplyr::mutate(rank_order = ifelse(Banca == "Total", 0, 1)) %>%
dplyr::arrange(rank_order, desc(Rata_Plati)) %>% dplyr::select(-rank_order) %>%
# I do not collect now Plafon Procentual & Plafon Trezorerie as it will be needed after adjusting Clasa_Risc
dplyr::left_join(y = clase_risc %>% dplyr::select(1,3), by = c("Banca" = "CodFinantator") ) %>%
dplyr::mutate(ajustare_clasa = ifelse(
Rata_Plati <=   rata_anualizata_plati + 0.04,0, ifelse(
Rata_Plati <=   rata_anualizata_plati + 0.08,
1, ifelse(Rata_Plati <=   rata_anualizata_plati + 0.1, 2, 3) )   )) %>%
dplyr::mutate(Clasa_Risc_Ajustata = LETTERS[match(ClasaRisc, LETTERS) + ajustare_clasa])
solduri_begining_year %>% dplyr::group_by(Banca) %>%
dplyr::summarise(Sold_Garantii = sum(Sold_Garantii)) %>%
dplyr::left_join(baza_plati, by = "Banca") %>% dplyr::mutate(Plati = ifelse(is.na(Plati), 0, Plati)) %>%
janitor::adorn_totals(where = "row",  fill = "-",   na.rm = T) %>%
dplyr::mutate(Rata_Plati = Plati / Sold_Garantii * 12 / lubridate::month(report_date)) %>%
dplyr::mutate(rank_order = ifelse(Banca == "Total", 0, 1)) %>%
dplyr::arrange(rank_order, desc(Rata_Plati)) %>% dplyr::select(-rank_order) %>%
# I do not collect now Plafon Procentual & Plafon Trezorerie as it will be needed after adjusting Clasa_Risc
dplyr::left_join(y = clase_risc %>% dplyr::select(1,3), by = c("Banca" = "CodFinantator") ) %>%
dplyr::mutate(ajustare_clasa = ifelse(
Rata_Plati <=   rata_anualizata_plati + 0.04,0, ifelse(
Rata_Plati <=   rata_anualizata_plati + 0.08,
1, ifelse(Rata_Plati <=   rata_anualizata_plati + 0.1, 2, 3) )   )) %>%
dplyr::mutate(Clasa_Risc_Ajustata = LETTERS[match(ClasaRisc, LETTERS) + ajustare_clasa]) %>% dplyr::left_join(
clase_risc %>% dplyr::filter(ClasaRisc != "-") %>% dplyr::group_by(ClasaRisc) %>% dplyr::summarise(
PlafonProcentual = max(PlafonProcentual, na.rm = T),
LimitaTrezorerie = max(LimitaTrezorerie, na.rm = T) ) ,  by = c("Clasa_Risc_Ajustata" = "ClasaRisc")   )
rata_platilor <- solduri_begining_year %>% dplyr::group_by(Banca) %>%
dplyr::summarise(Sold_Garantii = sum(Sold_Garantii)) %>%
dplyr::left_join(baza_plati, by = "Banca") %>% dplyr::mutate(Plati = ifelse(is.na(Plati), 0, Plati)) %>%
janitor::adorn_totals(where = "row",  fill = "-",   na.rm = T) %>%
dplyr::mutate(Rata_Plati = Plati / Sold_Garantii * 12 / lubridate::month(report_date)) %>%
dplyr::mutate(rank_order = ifelse(Banca == "Total", 0, 1)) %>%
dplyr::arrange(rank_order, desc(Rata_Plati)) %>% dplyr::select(-rank_order) %>%
# I do not collect now Plafon Procentual & Plafon Trezorerie as it will be needed after adjusting Clasa_Risc
dplyr::left_join(y = clase_risc %>% dplyr::select(1,3), by = c("Banca" = "CodFinantator") ) %>%
dplyr::mutate(ajustare_clasa = ifelse(
Rata_Plati <=   rata_anualizata_plati + 0.04,0, ifelse(
Rata_Plati <=   rata_anualizata_plati + 0.08,
1, ifelse(Rata_Plati <=   rata_anualizata_plati + 0.1, 2, 3) )   )) %>%
dplyr::mutate(Clasa_Risc_Ajustata = LETTERS[match(ClasaRisc, LETTERS) + ajustare_clasa]) %>% dplyr::left_join(
clase_risc %>% dplyr::filter(ClasaRisc != "-") %>% dplyr::group_by(ClasaRisc) %>% dplyr::summarise(
PlafonProcentual = max(PlafonProcentual, na.rm = T),
LimitaTrezorerie = max(LimitaTrezorerie, na.rm = T) ) ,  by = c("Clasa_Risc_Ajustata" = "ClasaRisc")   )
rata_platilor %>% dplyr::filter(ajustare_clasa > 0) %>%
dplyr::select(Banca, Clasa_Risc_Ajustata,PlafonProcentual, LimitaTrezorerie)
DT::datatable(data = rata_platilor, options = list(dom = "tp"),
caption =  htmltools::tags$caption(style = 'caption-side: top; text-align: left;',
"Rata anualizata a Platilor pe banci:")) %>% DT::formatRound(columns = c(2:3, 9), digits = 0) %>%
DT::formatPercentage(columns = 4, digits = 1) )
DT::datatable(data = rata_platilor, options = list(dom = "tp"),
caption =  htmltools::tags$caption(style = 'caption-side: top; text-align: left;',
"Rata anualizata a Platilor pe banci:")) %>% DT::formatRound(columns = c(2:3, 9), digits = 0) %>%
DT::formatPercentage(columns = 4, digits = 1)
solduri_curente <- readRDS("R/reactivedata/baza_banci.rds") %>%
dplyr::filter(data_raport==vals$report_date,  Tip_surse == "Surse_proprii") %>%
#dplyr::mutate(Banca = ifelse(Banca=="BANCPOST","TRANSILVANIA", ifelse(Banca=="LEUMI","PIRAEUS",
#      ifelse(Banca == "CARPATICA", "FEROVIARA",Banca)))) %>%
dplyr::group_by(Banca) %>%
dplyr::summarise(Sold_Garantii=sum(`Soldul garantiei [in LEI]`)) %>% as.data.frame() %>%
dplyr::left_join(y = clase_risc %>% dplyr::select(1,3,7), by = c("Banca" = "CodFinantator") ) %>%
dplyr::mutate(ClasaRisc = ifelse(Banca %in% banci_ajustate$Banca,
banci_ajustate$Clasa_Risc_Ajustata[match(Banca,banci_ajustate$Banca)],ClasaRisc),
PlafonProcentual = ifelse(Banca %in% banci_ajustate$Banca,
banci_ajustate$PlafonProcentual[match(Banca,banci_ajustate$Banca)],PlafonProcentual)) %>%
dplyr::mutate(Plafon_Finantator = PlafonProcentual * input$cap_proprii * 7) %>%
dplyr::mutate(Utilizare_Plafon_Finantator = Sold_Garantii/Plafon_Finantator) %>%
dplyr::mutate(Utilizare_Plafon_Garantare = Sold_Garantii/(input$cap_proprii * 7)) %>%
dplyr::mutate(dplyr::across(.cols = ClasaRisc,~as.character(.x))) %>%
dplyr::mutate(dplyr::across(.cols = PlafonProcentual,~as.numeric(.x)))
solduri_curente <- readRDS("R/reactivedata/baza_banci.rds") %>%
dplyr::filter(data_raport==report_date,  Tip_surse == "Surse_proprii") %>%
#dplyr::mutate(Banca = ifelse(Banca=="BANCPOST","TRANSILVANIA", ifelse(Banca=="LEUMI","PIRAEUS",
#      ifelse(Banca == "CARPATICA", "FEROVIARA",Banca)))) %>%
dplyr::group_by(Banca) %>%
dplyr::summarise(Sold_Garantii=sum(`Soldul garantiei [in LEI]`)) %>% as.data.frame() %>%
dplyr::left_join(y = clase_risc %>% dplyr::select(1,3,7), by = c("Banca" = "CodFinantator") ) %>%
dplyr::mutate(ClasaRisc = ifelse(Banca %in% banci_ajustate$Banca,
banci_ajustate$Clasa_Risc_Ajustata[match(Banca,banci_ajustate$Banca)],ClasaRisc),
PlafonProcentual = ifelse(Banca %in% banci_ajustate$Banca,
banci_ajustate$PlafonProcentual[match(Banca,banci_ajustate$Banca)],PlafonProcentual)) %>%
dplyr::mutate(Plafon_Finantator = PlafonProcentual * input$cap_proprii * 7) %>%
dplyr::mutate(Utilizare_Plafon_Finantator = Sold_Garantii/Plafon_Finantator) %>%
dplyr::mutate(Utilizare_Plafon_Garantare = Sold_Garantii/(input$cap_proprii * 7)) %>%
dplyr::mutate(dplyr::across(.cols = ClasaRisc,~as.character(.x))) %>%
dplyr::mutate(dplyr::across(.cols = PlafonProcentual,~as.numeric(.x)))
banci_ajustate <- rata_platilor %>% dplyr::filter(ajustare_clasa > 0) %>%
dplyr::select(Banca, Clasa_Risc_Ajustata,PlafonProcentual, LimitaTrezorerie)
solduri_curente <- readRDS("R/reactivedata/baza_banci.rds") %>%
dplyr::filter(data_raport==report_date,  Tip_surse == "Surse_proprii") %>%
#dplyr::mutate(Banca = ifelse(Banca=="BANCPOST","TRANSILVANIA", ifelse(Banca=="LEUMI","PIRAEUS",
#      ifelse(Banca == "CARPATICA", "FEROVIARA",Banca)))) %>%
dplyr::group_by(Banca) %>%
dplyr::summarise(Sold_Garantii=sum(`Soldul garantiei [in LEI]`)) %>% as.data.frame() %>%
dplyr::left_join(y = clase_risc %>% dplyr::select(1,3,7), by = c("Banca" = "CodFinantator") ) %>%
dplyr::mutate(ClasaRisc = ifelse(Banca %in% banci_ajustate$Banca,
banci_ajustate$Clasa_Risc_Ajustata[match(Banca,banci_ajustate$Banca)],ClasaRisc),
PlafonProcentual = ifelse(Banca %in% banci_ajustate$Banca,
banci_ajustate$PlafonProcentual[match(Banca,banci_ajustate$Banca)],PlafonProcentual)) %>%
dplyr::mutate(Plafon_Finantator = PlafonProcentual * input$cap_proprii * 7) %>%
dplyr::mutate(Utilizare_Plafon_Finantator = Sold_Garantii/Plafon_Finantator) %>%
dplyr::mutate(Utilizare_Plafon_Garantare = Sold_Garantii/(input$cap_proprii * 7)) %>%
dplyr::mutate(dplyr::across(.cols = ClasaRisc,~as.character(.x))) %>%
dplyr::mutate(dplyr::across(.cols = PlafonProcentual,~as.numeric(.x)))
cap_proprii <- 1069000000
solduri_curente <- readRDS("R/reactivedata/baza_banci.rds") %>%
dplyr::filter(data_raport==report_date,  Tip_surse == "Surse_proprii") %>%
#dplyr::mutate(Banca = ifelse(Banca=="BANCPOST","TRANSILVANIA", ifelse(Banca=="LEUMI","PIRAEUS",
#      ifelse(Banca == "CARPATICA", "FEROVIARA",Banca)))) %>%
dplyr::group_by(Banca) %>%
dplyr::summarise(Sold_Garantii=sum(`Soldul garantiei [in LEI]`)) %>% as.data.frame() %>%
dplyr::left_join(y = clase_risc %>% dplyr::select(1,3,7), by = c("Banca" = "CodFinantator") ) %>%
dplyr::mutate(ClasaRisc = ifelse(Banca %in% banci_ajustate$Banca,
banci_ajustate$Clasa_Risc_Ajustata[match(Banca,banci_ajustate$Banca)],ClasaRisc),
PlafonProcentual = ifelse(Banca %in% banci_ajustate$Banca,
banci_ajustate$PlafonProcentual[match(Banca,banci_ajustate$Banca)],PlafonProcentual)) %>%
dplyr::mutate(Plafon_Finantator = PlafonProcentual * cap_proprii * 7) %>%
dplyr::mutate(Utilizare_Plafon_Finantator = Sold_Garantii/Plafon_Finantator) %>%
dplyr::mutate(Utilizare_Plafon_Garantare = Sold_Garantii/(cap_proprii * 7)) %>%
dplyr::mutate(dplyr::across(.cols = ClasaRisc,~as.character(.x))) %>%
dplyr::mutate(dplyr::across(.cols = PlafonProcentual,~as.numeric(.x)))
solduri_curente
View(sinteza_limite)
DT::datatable(data=solduri_curente)
solduri_curente <- readRDS("R/reactivedata/baza_banci.rds") %>%
dplyr::filter(data_raport==report_date,  Tip_surse == "Surse_proprii") %>%
dplyr::mutate(Banca = ifelse(Banca=="BANCPOST","TRANSILVANIA", ifelse(Banca=="LEUMI","PIRAEUS",
Banca))) %>%   dplyr::group_by(Banca) %>%
dplyr::summarise(Sold_Garantii=sum(`Soldul garantiei [in LEI]`)) %>% as.data.frame() %>%
dplyr::left_join(y = clase_risc %>% dplyr::select(1,3,7), by = c("Banca" = "CodFinantator") ) %>%
dplyr::mutate(ClasaRisc = ifelse(Banca %in% banci_ajustate$Banca,
banci_ajustate$Clasa_Risc_Ajustata[match(Banca,banci_ajustate$Banca)],ClasaRisc),
PlafonProcentual = ifelse(Banca %in% banci_ajustate$Banca,
banci_ajustate$PlafonProcentual[match(Banca,banci_ajustate$Banca)],PlafonProcentual)) %>%
dplyr::mutate(Plafon_Finantator = PlafonProcentual * cap_proprii * 7) %>%
dplyr::mutate(Utilizare_Plafon_Finantator = Sold_Garantii/Plafon_Finantator) %>%
dplyr::mutate(Utilizare_Plafon_Garantare = Sold_Garantii/(cap_proprii * 7)) %>%
dplyr::mutate(dplyr::across(.cols = ClasaRisc,~as.character(.x))) %>%
dplyr::mutate(dplyr::across(.cols = PlafonProcentual,~as.numeric(.x)))
DT::datatable(data=solduri_curente)
solduri_begining_year <- readRDS("R/reactivedata/baza_banci.rds")
unique(solduri_begining_year$Banca)
readRDS("R/reactivedata/baza_banci.rds") %>%
dplyr::filter(data_raport==begining_year, Tip_surse == "Surse_proprii") %>% dplyr::pull(Banca) %>% unique()
solduri_begining_year <- readRDS("R/reactivedata/baza_banci.rds") %>%
dplyr::filter(data_raport==begining_year, Tip_surse == "Surse_proprii") %>% dplyr::pull(Banca) %>% unique()
rata_anualizata_plati <- sum(baza_plati$Plati)/sum(solduri_begining_year$Sold_Garantii) * 12/
lubridate::month(report_date)
readRDS("R/reactivedata/plati/bi_plati.rds") %>% dplyr::pull(Banca) %>% unique()
golem::add_module(name = "admin")
runApp()
tabela_nume_banci <- readxl::read_excel("tabela_nume_banci.xlsx")
str(tabela_nume_banci)
tabela_nume_banci %>% dplyr::mutate(dplyr::across(.cols = dplyr::starts_with("Data"),~as.Date.POSIXct(.x))) %>%
str()
tabela_nume_banci <- readxl::read_excel("tabela_nume_banci.xlsx") %>%
dplyr::mutate(dplyr::across(.cols = dplyr::starts_with("Data"),~as.Date.POSIXct(.x)))
str(tabela_nume_banci)
saveRDS(object = tabela_nume_banci,file = "R/reactivedata/banci/tabela_nume_banci.rds")
runApp()
runApp()
runApp()
View(tabela_nume_banci)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
