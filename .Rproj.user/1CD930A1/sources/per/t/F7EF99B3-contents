#' sidebar UI Function
#'
#' @description A shiny Module.
#'
#' @param id,input,output,session Internal parameters for {shiny}.
#'
#' @noRd 
#'
#' @importFrom shiny NS tagList 
mod_sidebar_ui <- function(id){
  ns <- NS(id)
  bs4Dash::sidebarMenuOutput(outputId = ns("sidebar"))
}
    
#' sidebar Server Function
#'
#' @noRd 
mod_sidebar_server <- function(input, output, session, vals){
  ns <- session$ns
 
  risk_user_sidebar <- bs4Dash::sidebarMenu(
    id = ns("tabs"),
    bs4Dash::menuItem(
      tabName = "home",
      text = "Home",
      icon = icon("home"),
      selected = F
    ),
    
    bs4Dash::menuItem(
      tabName = "prudentialitate",
      text = "Prudentialitate",
      icon = icon("check-square"),
      selected = FALSE,startExpanded = TRUE,
      bs4Dash::menuSubItem(
        text = "Soldul de garantii ",
        tabName = "garantii",
        selected = TRUE,
        icon = icon("money-bill")
      )
    )
  )
     
  
  output$sidebar <- bs4Dash::renderMenu({
    
    risk_user_sidebar
    
  })
  
  observeEvent(input$tabs,{ 
    # I use this in order to have a selection of all inputs in sidebar. This way, I don`t have to call modules
    # every time a sidebar is selected, I only call modules ones.`
    vals$sidebar_selected <- c(vals$sidebar_selected,input$tabs)
    
  })
  
  
}
    
## To be copied in the UI
# mod_sidebar_ui("sidebar_ui_1")
    
## To be copied in the server
# callModule(mod_sidebar_server, "sidebar_ui_1")
 
